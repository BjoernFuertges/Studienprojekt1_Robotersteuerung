syntax = "proto3";

import "google/protobuf/empty.proto";

// The greeting service definition.
service Agent {
  // Sends a greeting
  rpc MoveInformation (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryLeft (MoveInformationSendLeft) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryRight (MoveInformationSendRight) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryCenter (MoveInformationSendCenter) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryForward (MoveInformationSendForward) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryBackward (MoveInformationSendBackward) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryChangeLeft (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryChangeRight (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryChangeLeftChange (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryChangeRightChange (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryChangeCenter (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryChangeForward (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryChangeBackward (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationDeliveryStop (MoveInformationSendStop) returns (MoveInformationReply) {}
  rpc MoveInformationGetLastSended (MoveInformationRequest) returns (MoveInformationReplyWithStatus) {}
  rpc MoveInformationGetNew (MoveInformationRequest) returns (MoveInformationReply) {}
  rpc MoveInformationHasNew (MoveInformationRequest) returns (MoveInformationHasNewReply) {}
  rpc ImageReceiverChunker(stream ImageChunk) returns (google.protobuf.Empty) {}
}

message ImageChunk {
  int32 chunk = 1;
}

// The request message containing the user's name.
message MoveInformationRequest {
  string name = 1;
}

// The response message containing the greetings
message MoveInformationReply {
  string name = 1;
  bool stop = 2;
  int32 speed = 3;
  string direction = 4;
  string turn = 5;
  double radius = 6;
}

message MoveInformationReplyWithStatus {
  string name = 1;
  bool stop = 2;
  int32 speed = 3;
  string direction = 4;
  string turn = 5;
  double radius = 6;
  bool passedToRobot = 7;
}

message MoveInformationHasNewReply {
  bool hasNew = 1;
}

message MoveInformationSendLeft {
  string name = 1;
  int32 speed = 3;
  double radius = 6;
}

message MoveInformationSendRight {
  string name = 1;
  int32 speed = 3;
  double radius = 6;
}

message MoveInformationSendCenter {
  string name = 1;
  int32 speed = 3;
  double radius = 6;
}

message MoveInformationSendForward {
  string name = 1;
  int32 speed = 3;
  double radius = 6;
}

message MoveInformationSendBackward {
  string name = 1;
  int32 speed = 3;
  double radius = 6;
}

message MoveInformationSendStop {
  string name = 1;
  bool stop = 2;
}